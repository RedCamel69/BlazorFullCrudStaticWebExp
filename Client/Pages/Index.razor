@page "/"
@using System.Reflection;
@using BlazorEcommerceStaticWebApp.Client.Services.Helper;

@implements IDisposable
@inject StateContainer StateContainer

<PageTitle>Blazor Full Stack Crud (SQLITE)</PageTitle>

<div class="container">
<div class="row">
        <div class="col">
            Build Version: @Assembly.GetExecutingAssembly().GetName().Version
        </div>
        <div class="col">
            Buid Name: @Assembly.GetExecutingAssembly().GetName().FullName
        </div>
</div>
    <div class="row">
        <div class="col">

            <p>UseAzureSQL: <b>@StateContainer.UseAzureSQL</b></p>
            <p>UseSQLite: <b>@StateContainer.UseSQLite</b></p>

            <p>
                <button @onclick="ChangeTargetDb">
                   Switch DB
                </button>
            </p>
        </div>
    </div>
</div>

<div class="container">
    <div class="row">
        <div class="col">
            <h2>Tutors Table</h2>
            <p>Table mapping to the Tutor model.</p>
            <table class="table table-bordered table-model">
                <thead class="thead-dark">
                    <tr>
                        <th colspan="2">Tutors</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="1" class="table-col">
                            ID
                        </td>
                        <td colspan="1" class="table-col">
                            (PK) Int
                        </td>
                    </tr>
                    <tr>
                        <td class="col-1">
                            FirstName
                        </td>
                        <td class="col-1">
                            String NN
                        </td>
                    </tr>
                    <tr>
                        <td class="col-1">
                            LastName
                        </td>
                        <td class="col-1">
                            String
                        </td>
                    </tr>
                    <tr>
                        <td class="col-1">
                            ProtopageURL
                        </td>
                        <td class="col-1">
                            String
                        </td>
                    </tr>
                    <tr>
                        <td class="col-1">
                            Email
                        </td>
                        <td class="col-1">
                            String
                        </td>
                    </tr>
                    <tr>
                        <td class="col-1">
                            Phone
                        </td>
                        <td class="col-1">
                            String
                        </td>
                    </tr>
                    <tr>
                        <td class="col-1">
                            MobilePhone
                        </td>
                        <td class="col-1">
                            String
                        </td>
                    </tr>
                    <tr>
                        <td class="col-1">
                            (FK) BusinessId
                        </td>
                        <td class="col-1">
                            Int
                        </td>
                    </tr>

                </tbody>
            </table>
        </div>
        <div class="col">
             <h2>Business Table</h2>
    <p>Table mapping to the Business model.</p>
    <table class="table table-bordered table-model">
        <thead class="thead-dark">
            <tr>
                <th colspan="2">Business</th>
            </tr>
        </thead>
        <tbody>
            <tr>
                <td colspan="1" class="table-col">
                    BusinessId
                </td>
                <td colspan="1" class="table-col">
                    (PK) Int
                </td>
            </tr>
            <tr>
                <td class="col-1">
                    Name
                </td>
                <td class="col-1">
                    String NN
                </td>
            </tr>          
        </tbody>
    </table>
        </div>
        <div class="col">
            <h2>Student Table</h2>
            <p>Table mapping to the Student model.</p>
            <table class="table table-bordered table-model">
                <thead class="thead-dark">
                    <tr>
                        <th colspan="2">Student</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td colspan="1" class="table-col">
                            StudentId
                        </td>
                        <td colspan="1" class="table-col">
                            (PK) Int
                        </td>
                    </tr>
                    <tr>
                        <td class="col-1">
                            FirstName
                        </td>
                        <td class="col-1">
                            String NN
                        </td>
                    </tr>
                    <tr>
                        <td class="col-1">
                            LastName
                        </td>
                        <td class="col-1">
                            String NN
                        </td>
                    </tr>
                    <tr>
                        <td class="col-1">
                            School
                        </td>
                        <td class="col-1">
                            String NN
                        </td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>
</div>







@code {

    protected override void OnInitialized()
    {
        StateContainer.OnChange += StateHasChanged;
    }

    private void ChangeTargetDb()
    {
        if (StateContainer.UseSQLite)
        {
            StateContainer.UseSQLite = false;
            StateContainer.UseAzureSQL = true;
        }
        else
        {
            StateContainer.UseSQLite = true;
            StateContainer.UseAzureSQL = false;
        }
    }

    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }

}