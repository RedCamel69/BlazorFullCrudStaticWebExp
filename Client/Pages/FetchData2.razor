@page "/fetchdata2"
@using BlazorEcommerceStaticWebApp.Shared;

@inject HttpClient Http

<h1>Students</h1>

@if (featuredProducts.Count < 1)
{
    <h1>No products!</h1>
}
else
{
    foreach (Product p in featuredProducts)
    {
        <h3>@p.Title</h3>
    }
}

@if(exception != null){
    if (exception.Message != null){
       <h2>@exception.Message</h2>
    }
    if (exception.InnerException != null)
    {
        <h2>@exception.InnerException.Message</h2>
    }
    
}
  
<h2>Home</h2>
@home

@code {

    private List<Product> featuredProducts = new List<Product> { };

    private Exception? exception;

    private string? connection;

    private string? home;

    protected override async Task OnInitializedAsync()
    {
        try
        {

            home = Environment.GetEnvironmentVariable("HOME") ?? "";

            //connection = await Http.GetStringAsync("/api/utils") ?? String.Empty;

            //var res = await Http.GetStringAsync("/api/ProductsAsync");

            var res = await Http.GetFromJsonAsync<ServiceResponse<List<Product>>>("/api/ProductsAsync");

            if (res!= null &&  res.Success == true )
            {
                featuredProducts = res.Data ?? new List<Product> { };
            }

         

           

            
        }
        catch (Exception ex)
        {
            exception = ex;
            Console.WriteLine(ex.ToString());
        }
    }
}
